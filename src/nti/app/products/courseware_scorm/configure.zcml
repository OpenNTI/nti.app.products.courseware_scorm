<!-- -*- mode: nxml -*- -->
<configure	xmlns="http://namespaces.zope.org/zope"
			xmlns:i18n="http://namespaces.zope.org/i18n"
			xmlns:ext="http://nextthought.com/ntp/ext"
			xmlns:zcml="http://namespaces.zope.org/zcml"
			xmlns:scorm="http://nextthought.com/ntp/scorm"
			i18n_domain="zope">

	<include package="zope.component" file="meta.zcml" />
	<include package="zope.security" file="meta.zcml" />
	<include package="zope.component" />
	<include package="zope.security" />

	<include package="zope.annotation" />

	<include package="nti.scorm_cloud" />

	<adapter factory=".courses.SCORMCourseInstanceMetadataFactory" />

	<adapter factory=".courses.SCORMIdentifier"
			 for="nti.contenttypes.courses.interfaces.ICourseInstance"
			 provides=".interfaces.ISCORMIdentifier" />

	<adapter factory=".courses.SCORMIdentifier"
			 for="nti.dataserver.interfaces.IUser"
			 provides=".interfaces.ISCORMIdentifier" />

	<adapter factory=".courses.SCORMIdentifier"
			 for="nti.contenttypes.courses.interfaces.ICourseInstanceEnrollmentRecord"
			 provides=".interfaces.ISCORMIdentifier" />

	 <adapter factory=".courses.SCORMRegistrationIdentifier"
 			 for="nti.dataserver.interfaces.IUser nti.contenttypes.courses.interfaces.ICourseInstance"
 			 provides=".interfaces.ISCORMIdentifier" />

	<adapter factory=".model.ScormInstance"
 			 for="nti.scorm_cloud.client.registration.Instance"
 			 provides=".interfaces.IScormInstance" />

	<adapter factory=".model.ScormRegistration"
			 for="nti.scorm_cloud.client.registration.Registration"
			 provides=".interfaces.IScormRegistration" />

	 <adapter factory=".model.SCORMProgress"
 			 for="nti.scorm_cloud.client.registration.RegistrationReport"
 			 provides=".interfaces.ISCORMProgress" />

	<!-- Subscribers -->
	<subscriber handler=".subscribers._enrollment_record_dropped" />
	<subscriber handler=".subscribers._on_course_instance_removed" />

	<subscriber factory=".subscribers.SCORMAllCoursesCollectionAcceptsProvider"
				provides="nti.app.products.courseware.interfaces.IAllCoursesCollectionAcceptsProvider" />

	<!-- Client -->
	<include package="." file="meta.zcml" />

	<configure zcml:condition="not-have testmode">
		<scorm:registerSCORMCloudService />
	</configure>
	<configure zcml:condition="have testmode">
		<!-- <include package=".tests" file="test_client.py" /> -->
		<scorm:registerSCORMCloudService
			factory=".tests.test_client.MockSCORMCloudService" />
	</configure>

	<configure zcml:condition="have devmode">
		<scorm:registerSCORMCloudClient
			app_id="AQYJPZXZAY"
			secret_key="G9M1J6uv1hr3ll7wnkPWGFXutMqQXbdhXX8dZnE8"
 			service_url="https://cloud.scorm.com/EngineWebServices" />
	</configure>

	<!-- Decorators -->
	<subscriber factory=".decorators._SCORMCourseInstanceDecorator"
				provides="nti.externalization.interfaces.IExternalObjectDecorator"
				for=".interfaces.ISCORMCourseInstance
				     pyramid.interfaces.IRequest" />

	<subscriber factory=".decorators._SCORMCourseInstanceMetadataDecorator"
				provides="nti.externalization.interfaces.IExternalObjectDecorator"
				for=".interfaces.ISCORMCourseMetadata
				     pyramid.interfaces.IRequest" />
	
	<subscriber factory=".decorators._CourseInstanceEnrollmentRecordDecorator"
				provides="nti.externalization.interfaces.IExternalObjectDecorator"
				for=".interfaces.ICourseInstanceEnrollmentRecord
				     pyramid.interfaces.IRequest" />

	<!-- Externalization -->
	<include package="nti.externalization" file="meta.zcml" />
	<include package="nti.externalization" />

	<ext:registerAutoPackageIO
					root_interfaces=".interfaces.ISCORMCourseMetadata
													 .interfaces.IScormInstance
													 .interfaces.IScormRegistration
													 .interfaces.ISCORMProgress"
					modules=".courses .model" />

</configure>
